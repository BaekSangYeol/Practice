1. 안녕하세요, 3조 프로젝트 발표 시작하겠습니다.

2. 목차 소개 -- 프로젝트 설계 / 세부기능 시연 순으로 발표를 진행하겠습니다.

3. 
먼저 프로젝트 설계입니다.
저희 조는 투어 사이트를 모티브로 하여 다양한 패키지 투어 상품들을 판매하는 웹사이트를 구현하고자하였습니다.

구현에 앞서 웹사이트에 필요한 기능들을 4가지의 큰 카테고리로 나누고, 그에 따른 단위 기능과 상세 요구사항을 정리하며 요구 사항 명세서를 작성하였습니다.
이때 큰 카테고리는 회원가입 및 회원 정보를 관리하는 회원 카테고리.
상품과 리뷰 관리 및 장바구니 기능을 담당하는 상품 카테고리.
예약 및 결제를 관리 하는 예약 카테고리.
QNA게시판을 관리하는 커뮤니티 카테고리로 나눴으며 이에 따른 상세 기능은 뒤에서 다시 한 번 말씀드리겠습니다.
요구 사항 명세서를 작성하며 카테고리 별로 어떠한 데이터 베이스 테이블이 필요한지 연구하고, 그것을 바탕으로 erd를 설계해보았습니다.

4.
저희는 전체 8가지의 테이블이 필요하였으며 테이블의 관계 및 테이블 설계는 다음과 같습니다.
각 각의 테이블에는 PK값이 존재하며 카테고리별로 연결되어 있는 테이블에 맞춰 FK값을 부여하였습니다.

erd 설계후에는 화면 정의서를 작성하여 어떠한 기능을 어느 페이지에서 구현해야하는지 고민해보았고, 그렇게 설계 계획을 구체화해나아갔습니다.
각 테이블에 접근하여 데이터를 전달하기 위한 DTO클래스와 데이터에 접근하기 위한 DAO클래스를 만들었으며 테스트 후에
jsp파일에서 서비스하기 위한 service 클래스를 작성하였습니다.

5.
다음은 카테고리 별 세부 기능에 대해 말씀드리겠습니다.
먼저 회원 파트입니다. 
저희 사이트의 일부 기능은 회원만 접근 할 수 있도록 구현하였고, 사용자는 회원 가입 폼을 이용하여 쉽게 회원 가입을 할 수 있도록 하였습니다.
회원은 본인의 정보를 열람 및 수정 할 수 있으며 아이디와 비밀번호를 찾는 것 또한 가능하도록 설계하였습니다. 

6.
또한 회원은 원하는 상품을 예약하거나 장바구니에 담을 수 있고,

7.
상품에 대한 후기와 평점을 남길 수 있으며 관리자에게 상품 문의를 남길 수도 있습니다.

8.
상품 파트의 세부 기능으로는 다음과 같이 상품에 대한 정보를 사용자에게 제공하고

9. 
원하는 상품을 장바구니에 담을 수 있는 기능이 있습니다.

10.
뿐만아니라 사용자는 상품의 리뷰를 작성하거나 열람 할 수 있어 상품에 대해 보다 디테일 한 정보를 얻을 수 있습니다.
이때 별점은 리뷰를 남기는 사용자가 부여하며, 해당 상품 리뷰에 남겨진 모든 별점의 평균치가 상품의 별점이 됩니다. 

11.
예약 파트는 장바구니에 담긴 전체 상품 또는 원하는 상품을 예약 할 수 있고, 상품의 세부정보에서 바로 예약할 수 있는 기능을 제공합니다.
이때 사용자는 결제 수단을 선택하여 결제를 진행 할 수 있고, 결제가 완료 된 후에는

12.
다음과 같이 예약 내역을 확인 할 수 있습니다.

13.
커뮤니티 파트에서는 사용자가 자주 찾는 질문을 제공함으로써 고객 응대 효율을 높였으며 이때 질문에 대한 답변은 질문의 타이틀을 클릭하여 확인 할 수 있습니다.

14.
또한, 사용자가 언제든 문의 할 수 있도록 문의 게시판을 구현하였으며 문의글을 작성할때는 이미지 업로드와 문의 카테고리를 분류할 수 있도록 설계하였고,
문의 작성시 분류 된 카테고리를 통해 문의 사항 카테고리 별 보기 기능과 작성 된 문의 내용을 검색하여 찾을 수 있는 기능도 제공하고 있습니다.

15.
저희 조는 추가적으로 관리자 기능도 구현하였는데 이때 관리자는 일반 사용자들과 달리 상품의 수정 및 삭제와 리뷰 관리를 할 수 있는 권한을 가지고 있습니다.

16.
그럼 앞서 발표한 내용을 바탕으로 시연을 시작하겠습니다.



★ 

상단 바에서 로그인 후 사람 아이콘 클릭시 내 정보와/예약내역/로그아웃 할 수있는
기능이 보이도록 하였습니다.

★ 회원가입 화면구성입니다.


중복체크를 진행하지 않고는 아이디를 입력 및 변경 할 수 없도록 구현하였습니다. 

아이디 중복검사는 사용 할 아이디를 입력받고 해당 아이디가 DB에 존재하는지 여부를 확인하는 것으로

해당 아이디가 DB에 존재하지 않을 경우에만 사용 할 수 있도록 처리하였습니다. 

회원가입 양식에 맞춰 모든 데이터를 입력 후 버튼을 누르면 해당 값들은 Service객체를 통해 DB의 MEMBER테이블에 저장되게됩니다.


★ Login 화면구성입니다.

아이디와 비밀번호를 입력 후에 로그인 클릭 시 

입력 된 아이디와 패스워드의 값과 DB에 등록 된 값을 비교하게됩니다.

이때 id의 존재 여부와 password값의 일치여부를 확인하여 로그인을 진행하게됩니다.

만약 존재하지 않는 아이디 또는 일치하지 않는 패스워드가 입력되었을 경우 사용자에게 경고 메세지를 띄우며

그렇지 않다면 session객체에 아이디 값을 저장하고, 로그인을 성공시키게 됩니다.



★ 내정보 화면구성입니다.

MEMBER TABLE의 PK값인 아이디 값을 인자로 받아 테이블에 저장 된 본인 정보를 출력해주는 페이지입니다.

이때 PK값인 아이디를 제외한 나머지 정보들은 수정 할 수 있도록 구현하였습니다.

회원 탈퇴기능 또한 PK값인 아이디 값을 인자로 받아 테이블에 저장 된 본인 정보를 삭제하도록 설계하였습니다.

삭제 후에는 바로 logout action이 이루어지고 따라서 저장되어있는 session의 값도 날라가게됩니다.


★ 상품리스트 화면구성입니다.

상품 테이블에 등록되어 있는 상품 데이터들을 리스트업해주는 화면으로 사용자가 편하게 볼 수 있도록

간단한 정보만 출력하도록 구현하였습니다. 또한 지역별 카테고리를 만들어서 지역별로 상품을 분류해 볼 수 있도록 하였습니다.

이때 각 상품에 나타난 별은 해당 상품의 평점을 의미합니다. 이 평점은 해당 상품의 리뷰 작성 시 사용자가 매긴 평점들의 평균으로 

평균의 반올림 값을 별을 통해 표현한 것입니다.

각 상품 별로 장바구니 담기 버튼을 부여하여 바로 장바구니에 담을 수 있도록 만들었으며 상품을 클릭하면 상품 디테일 페이지로 넘어가도록 설계하였습니다. 


★ 1개 상품 정보 화면구성입니다.

PK값인 상품번호를 이용해 하나의 상품 데이터를 디테일하게 출력해주는 페이지입니다.

이 페이지에서는 상품의 상세정보 확인 및 장바구니 담기와 상품 예약을 진행 할 수 있으며 리뷰버튼을 통해 해당 상품의 리뷰를 확인 할 수 있습니다.

이때 이 모든 실행은 상품 번호를 파라메타로 전달 받아 활용하게 됩니다. 

또한 만약 관리자 계정으로 이 화면에 접근하게 되면 일반 사용자 접근때와는 달리 상품 수정 및 삭제, 리뷰 관리 버튼이 출력되고 그에 따른 기능을 실행 할 수 있습니다. 


★ 장바구니 화면구성입니다.

장바구니 추가 액션이 일어날때마다 필요한 데이터들을 submit하게 되고 그 데이터들은 Cart table에 저장되게 됩니다.

이때 저장되었던 cart데이터를 세션 아이디를 이용해 리스트 형식으로 출력한 화면이 장바구니 화면입니다.   

장바구니 비우기 클릭 시 session 객체의 아이디값을 이용하여 해당 아이디의 cart테이블 데이터를 삭제할 수 있습니다.

또한 장바구니에 담겨있는 상품의 수량을 변경하는 기능과 원하는 상품을 선택하여 예약할 수 있는 기능도 구현하였습니다. 


★ 예약하기 화면구성입니다.

장바구니 또는 상품상세페이지에서 가져온 데이터를 출력해줌으로 결제가 진행 될 상품을 확인 할 수 있도록 구현하였습니다.

결제방법을 선택 후 결제 버튼을 눌러 결제를 진행 할 수있습니다.

결제 후에는 예약내역 페이지로 리다이렉션 시켜 결제가 완료 된 상품을 확인 할 수 있게 하였으며 

예약 된 상품 정보를 클릭 시 상품의 상세 내역을 볼 수 있도록 만들었습니다.


★ 상품의 리뷰 화면구성입니다.


리뷰 작성 클릭 시 작성자는 로그인 된 아이디로 자동부여되며, 작성자의 아이디는 변경 할 수 없습니다.

제목/평점/내용 작성 후에 등록 버튼을 누르면 작성된 데이터 값은 review table에 저장되게 됩니다.

이렇게 작성 된 리뷰는 작성자의 한에서 언제든 수정 및 삭제가 가능하며 작성자가 아닐 경우에는 리뷰 열람만 가능합니다.

이때 본인 및 다른 사용자가 게시글을 열람 할 경우 review table의 readcount 값을 1 증가 시킴으로 조회수가 변경됩니다.

또한 관리자 아이디로 접근하였을 경우에는 일반 사용자와 달리 리뷰에 대한 답글을 달 수 있는 권한이 부여되며

작성자가 아니더라고 해당 리뷰를 삭제 할 수 있는 권한을 갖게 됩니다.

***** 관리자의 답글에는 평점 값이 default값인 null로 들어가게되는데 이때 0이 아닌 null값이 디폴트인 이유는 avg함수를 이용하여 상품 평점을 낼때

평점에 영향을 끼치지 않게 하기 위해서,,,,, 근데 이건 설명안해도 될 것 같아여! 제 파트라 갑자기 신나서 썼어옄ㅋㅋㅋㅋㅋㅋㅋㅋ *****


★ 자주찾는질문 화면구성입니다.

로그인을 하지 않아도 접근이 가능하며, 문의하기는 로그인 없이는 이용 할수 없도록 제한하였으며,

관리자 아이디로 로그인 시에만 게시물 등록, 수정, 삭제에 접근이 가능하도록 하였습니다.

★ 문의하기 화면구성입니다.

카테고리 분류를 통하여 해당 카테고리의 문의내역을 볼 수 있으며, 검색기능을 통하여

검색한 키워드에 맞는 문의내역을 확인 할 수있습니다. 문의하기 클릭 시에 카테고리,제목,내용을 입력후

필요하다면 이미지 업로드를 통하여 내용에 이미지를 출력 할 수있습니다.

이상으로 3조 프로젝트 시연을 마치겠습니다. 감사합니다.










